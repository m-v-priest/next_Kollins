{"version":3,"file":"static/webpack/static\\development\\pages\\index.js.e2fe3231098d48d99405.hot-update.js","sources":["webpack:///./pages/Cpn_TextArea.jsx","webpack:///./pages/index.jsx"],"sourcesContent":["/*\r\n多行文本框, 专门用来存放选出的句子的string,\r\n表单会提交这个文本框中的值, 到后端, 并用fs来保存到文件中.\r\naction=\"#\" 表示 本表单提交给本页自己.\r\n */\r\n\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport objStore from '../store/objStore.js'\r\nimport * as moduleAction from '../store/fnCreateObjAction.js'\r\n\r\n\r\nexport default class Cpn_TextArea extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = objStore.getState() //从银行拿到默认的state对象\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n\r\n                <form action=\"#\"\r\n                      method=\"get\"\r\n                      onSubmit={(event) => {\r\n                          this.fn提交表单(event)\r\n                      }}>\r\n\r\n                    {/*多行文本框, 存放已选出来的句子*/}\r\n                    <textarea rows=\"10\" cols=\"50\"\r\n                              name={'area_StrSelected'}\r\n                              value={this.state.str_textArea}\r\n                              onChange={(event) => {\r\n                              }}/>\r\n\r\n                    {/*按钮:清空文本框*/}\r\n                    <input type=\"button\"\r\n                           value={'清空'}\r\n                           onClick={() => {\r\n                           }}/>\r\n\r\n                    {/*按钮:保存文本框中的值到电脑文件*/}\r\n                    <input type=\"submit\" value=\"让服务器保存文件到电脑上\"/>\r\n\r\n                </form>\r\n                <hr/>\r\n\r\n            </React.Fragment>\r\n        )\r\n    }\r\n\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport objStore from '../store/objStore.js'\r\nimport * as moduleAction from '../store/fnCreateObjAction.js'\r\n\r\nimport Cpn_FindSingleWord from '../pages/Cpn_FindSingleWord'\r\nimport Cpn_sliceArrWordName from '../pages/Cpn_sliceArrWordName'\r\nimport Cpn_SingleWordAllInfo from '../pages/Cpn_SingleWordAllInfo'\r\nimport Cpn_selectedContents from '../pages/Cpn_selectedContents'\r\nimport Cpn_TextArea from '../pages/Cpn_TextArea'\r\n\r\n\r\nexport default class Cpn_Index extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = objStore.getState() //从银行拿到默认的state对象\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                <p>kollins主控台</p>\r\n\r\n                <Cpn_FindSingleWord/>\r\n                <Cpn_sliceArrWordName/>\r\n                <Cpn_SingleWordAllInfo/>\r\n                <Cpn_selectedContents/>\r\n             \r\n                {/*按钮: 把选出内容添加到文本框*/}\r\n                <input type=\"button\"\r\n                       value={'添加到下面的文本框中'}\r\n                       onClick={() => {\r\n\r\n                       }}\r\n                />\r\n\r\n                <Cpn_TextArea/>\r\n\r\n\r\n            </React.Fragment>\r\n        )\r\n    }\r\n\r\n}\r\n\r\n\r\n// let objCss = {\r\n//     容器: { /**/\r\n//         display: 'flex',\r\n//         height: '200px',\r\n//         border: \"solid 1px\",\r\n//         // flexDirection: 'row-reverse', /*每行中的元素, 从右到左排*/\r\n//         flexWrap: 'wrap', /*一行超过容器宽度, 就换行*/\r\n//         alignContent: \"flex-start\", //行与行的行距, 不平均分配容器的高度, 而是采用默认的固定行距.\r\n//     },\r\n//\r\n//     项目: {\r\n//         width: '33.33%',\r\n//         // flexGrow: 1, //一行中无论有几个元素, 都平均分配容器的宽度\r\n//     }\r\n// }"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;;;AAMA;AACA;AAEA;AACA;AACA;AAEA;;;;;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;AACA;AAHA;AAGA;AACA;;;AACA;AAAA;AACA;AAAA;AAGA;AACA;AACA;AACA;AACA;AAJA;AAOA;AAAA;AACA;AACA;AACA;AAHA;AAOA;AACA;AACA;AAFA;AAMA;AAAA;AAAA;AAOA;;;;AArCA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACdA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;;;;;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;AACA;AAHA;AAGA;AACA;;;AACA;AACA;AAUA;AACA;AACA;AAFA;AAYA;;;;AA7BA;AAmCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;A","sourceRoot":""}