{"ast":null,"code":"import _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport objStore from '../store/objStore.js';\nimport * as moduleAction from '../store/fnCreateObjAction.js';\nimport Cpn_FindSingleWord from '../pages/Cpn_FindSingleWord';\nimport Cpn_sliceArrWordName from '../pages/Cpn_sliceArrWordName';\nimport Cpn_SingleWordAllInfo from '../pages/Cpn_SingleWordAllInfo';\nimport Cpn_selectedContents from '../pages/Cpn_selectedContents';\nimport Cpn_TextArea from '../pages/Cpn_TextArea';\n\nvar Cpn_Index =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Cpn_Index, _React$Component);\n\n  function Cpn_Index(props) {\n    var _this;\n\n    _classCallCheck(this, Cpn_Index);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Cpn_Index).call(this, props));\n    _this.state = objStore.getState(); //从银行拿到默认的state对象\n\n    return _this;\n  }\n\n  _createClass(Cpn_Index, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(React.Fragment, null, React.createElement(\"p\", null, \"kollins\\u4E3B\\u63A7\\u53F0\"), React.createElement(\"div\", {\n        id: \"id\\u8BCD\\u5934\\u5207\\u7247\\u6570\\u7EC4\",\n        style: objCss.css词头切片数组\n      }, React.createElement(Cpn_sliceArrWordName, null)), React.createElement(\"div\", {\n        id: \"id\\u5176\\u4ED6div\\u5143\\u7D20\\u7684\\u6574\\u4F53\",\n        style: objCss.css其他div元素的整体\n      }, React.createElement(Cpn_FindSingleWord, null), React.createElement(Cpn_SingleWordAllInfo, null), React.createElement(Cpn_selectedContents, null), React.createElement(Cpn_TextArea, null)));\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var divHeight = document.getElementById('id词头切片数组').offsetHeight;\n    }\n  }]);\n\n  return Cpn_Index;\n}(React.Component);\n\nexport { Cpn_Index as default };\nvar objCss = {\n  css词头切片数组: {\n    position: \"fixed\",\n    background: \"rgba(0,152,50,0.7)\"\n  },\n  //让这个div元素浮动固定.\n\n  /*注意: flex是不支持浮动的, 但是我们可以在运用了flex样式的元素的外面,再包一层div,\r\n  对这个div运用传统的css样式, 就能使用position来浮动了.\r\n   */\n  css其他div元素的整体: {\n    marginTop: \"320px\"\n  } // let objCss = {\n  //     容器: { /**/\n  //         display: 'flex',\n  //         height: '200px',\n  //         border: \"solid 1px\",\n  //         // flexDirection: 'row-reverse', /*每行中的元素, 从右到左排*/\n  //         flexWrap: 'wrap', /*一行超过容器宽度, 就换行*/\n  //         alignContent: \"flex-start\", //行与行的行距, 不平均分配容器的高度, 而是采用默认的固定行距.\n  //     },\n  //\n  //     项目: {\n  //         width: '33.33%',\n  //         // flexGrow: 1, //一行中无论有几个元素, 都平均分配容器的宽度\n  //     }\n  // }\n\n};","map":{"version":3,"sources":["E:\\phpStorm_proj\\next_Kollins\\pages\\index.jsx"],"names":["React","ReactDOM","objStore","moduleAction","Cpn_FindSingleWord","Cpn_sliceArrWordName","Cpn_SingleWordAllInfo","Cpn_selectedContents","Cpn_TextArea","Cpn_Index","props","state","getState","objCss","css词头切片数组","css其他div元素的整体","divHeight","document","getElementById","offsetHeight","Component","position","background","marginTop"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AAEA,OAAOC,QAAP,MAAqB,sBAArB;AACA,OAAO,KAAKC,YAAZ,MAA8B,+BAA9B;AAEA,OAAOC,kBAAP,MAA+B,6BAA/B;AACA,OAAOC,oBAAP,MAAiC,+BAAjC;AACA,OAAOC,qBAAP,MAAkC,gCAAlC;AACA,OAAOC,oBAAP,MAAiC,+BAAjC;AACA,OAAOC,YAAP,MAAyB,uBAAzB;;IAGqBC,S;;;;;AACjB,qBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACf,mFAAMA,KAAN;AACA,UAAKC,KAAL,GAAaT,QAAQ,CAACU,QAAT,EAAb,CAFe,CAEkB;;AAFlB;AAGlB;;;;6BAEQ;AACL,aACI,oBAAC,KAAD,CAAO,QAAP,QACI,2DADJ,EAGI;AAAK,QAAA,EAAE,EAAE,wCAAT;AAAoB,QAAA,KAAK,EAAEC,MAAM,CAACC;AAAlC,SACI,oBAAC,oBAAD,OADJ,CAHJ,EAOI;AAAK,QAAA,EAAE,EAAC,iDAAR;AAAuB,QAAA,KAAK,EAAED,MAAM,CAACE;AAArC,SACI,oBAAC,kBAAD,OADJ,EAEI,oBAAC,qBAAD,OAFJ,EAGI,oBAAC,oBAAD,OAHJ,EAII,oBAAC,YAAD,OAJJ,CAPJ,CADJ;AAgBH;;;wCAEmB;AAChB,UAAIC,SAAS,GAAGC,QAAQ,CAACC,cAAT,CAAwB,UAAxB,EAAoCC,YAApD;AACH;;;;EA3BkCnB,KAAK,CAACoB,S;;SAAxBX,S;AA+BrB,IAAII,MAAM,GAAG;AACTC,EAAAA,SAAS,EAAE;AAACO,IAAAA,QAAQ,EAAE,OAAX;AAAmBC,IAAAA,UAAU,EAAC;AAA9B,GADF;AACwD;;AACjE;;;AAGAP,EAAAA,aAAa,EAAC;AAACQ,IAAAA,SAAS,EAAC;AAAX,GALL,CASb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAvBa,CAAb","sourcesContent":["import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport objStore from '../store/objStore.js'\r\nimport * as moduleAction from '../store/fnCreateObjAction.js'\r\n\r\nimport Cpn_FindSingleWord from '../pages/Cpn_FindSingleWord'\r\nimport Cpn_sliceArrWordName from '../pages/Cpn_sliceArrWordName'\r\nimport Cpn_SingleWordAllInfo from '../pages/Cpn_SingleWordAllInfo'\r\nimport Cpn_selectedContents from '../pages/Cpn_selectedContents'\r\nimport Cpn_TextArea from '../pages/Cpn_TextArea'\r\n\r\n\r\nexport default class Cpn_Index extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = objStore.getState() //从银行拿到默认的state对象\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                <p>kollins主控台</p>\r\n\r\n                <div id ='id词头切片数组' style={objCss.css词头切片数组}>\r\n                    <Cpn_sliceArrWordName/>\r\n                </div>\r\n\r\n                <div id='id其他div元素的整体' style={objCss.css其他div元素的整体}>\r\n                    <Cpn_FindSingleWord/>\r\n                    <Cpn_SingleWordAllInfo/>\r\n                    <Cpn_selectedContents/>\r\n                    <Cpn_TextArea/>\r\n                </div>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n\r\n    componentDidMount() {\r\n        let divHeight = document.getElementById('id词头切片数组').offsetHeight\r\n    }\r\n\r\n}\r\n\r\nlet objCss = {\r\n    css词头切片数组: {position: \"fixed\",background:\"rgba(0,152,50,0.7)\" }, //让这个div元素浮动固定.\r\n    /*注意: flex是不支持浮动的, 但是我们可以在运用了flex样式的元素的外面,再包一层div,\r\n    对这个div运用传统的css样式, 就能使用position来浮动了.\r\n     */\r\n    css其他div元素的整体:{marginTop:\"320px\"}\r\n}\r\n\r\n\r\n// let objCss = {\r\n//     容器: { /**/\r\n//         display: 'flex',\r\n//         height: '200px',\r\n//         border: \"solid 1px\",\r\n//         // flexDirection: 'row-reverse', /*每行中的元素, 从右到左排*/\r\n//         flexWrap: 'wrap', /*一行超过容器宽度, 就换行*/\r\n//         alignContent: \"flex-start\", //行与行的行距, 不平均分配容器的高度, 而是采用默认的固定行距.\r\n//     },\r\n//\r\n//     项目: {\r\n//         width: '33.33%',\r\n//         // flexGrow: 1, //一行中无论有几个元素, 都平均分配容器的宽度\r\n//     }\r\n// }"]},"metadata":{},"sourceType":"module"}