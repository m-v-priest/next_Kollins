{"ast":null,"code":"import objStore from \"./objStore\";\nimport * as moduleActionFactory from \"./fnCreateObjAction\";\nexport var fn_发送命令书_双向绑定word_currentFind = function fn_发送命令书_双向绑定word_currentFind(event) {\n  objStore.dispatch(moduleActionFactory.fn_创建命令书_update_WordCurrentFind(event.target.value));\n};\nexport var fn_发送命令书_搜索单词 = function fn_发送命令书_搜索单词(wordToFind) {\n  //搜索单个单词的柯林斯信息\n  objStore.dispatch(moduleActionFactory.fn_创建命令书_findSingleWord(wordToFind));\n};\nexport var fn_发送命令书_更新indexStart = function fn_发送命令书_更新indexStart(event) {\n  objStore.dispatch(moduleActionFactory.fn_创建命令书_update_indexStart(event.target.value));\n};\nexport var fn_发送命令书_更新indexEnd = function fn_发送命令书_更新indexEnd(event) {\n  objStore.dispatch(moduleActionFactory.fn_创建命令书_update_indexEnd(event.target.value));\n};\nexport var fn_发送命令书_获取切片中的词头数组 = function fn_发送命令书_获取切片中的词头数组() {\n  objStore.dispatch(moduleActionFactory.fn_创建命令书_update_arrWordNameInSlice());\n};\nexport var fn_发送命令书_获取下20个单词 = function fn_发送命令书_获取下20个单词() {\n  objStore.dispatch(moduleActionFactory.fn_创建命令书_获取下20个单词());\n};\nexport var fn_发送命令书_更新arrSelectedContent = function fn_发送命令书_更新arrSelectedContent() {\n  objStore.dispatch(moduleActionFactory.fn_创建命令书_udpate_arrSelectedContent(event.target.innerText));\n}; //----------------------------------------\n\nexport var fn_处理所有释例到一维数组 = function fn_处理所有释例到一维数组(arr所有释例) {\n  var newArr = []; //存放\"arr所有释例\"在经过处理后的扁平化一维数组\n\n  arr所有释例.forEach(function (item单个释例, index, arr) {\n    newArr.push(index + 1); //把编号也作为数组的一个item添加进去, 方便我们查看该单词到底有多少条释义.\n\n    var arr单个释例的释义与例句 = item单个释例.split('|'); //str.split([separator[, limit]])方法, 使用指定的分隔符字符串将一个String对象分割成字符串数组. 返回一个字符串数组,不包括 separator 自身。\n\n    arr单个释例的释义与例句.forEach(function (item, index, arr) {\n      newArr.push(item);\n    });\n    newArr.push('--------');\n  });\n  return newArr;\n};","map":{"version":3,"sources":["E:\\phpStorm_proj\\next_Kollins\\store\\myFunc.js"],"names":["objStore","moduleActionFactory","fn_发送命令书_双向绑定word_currentFind","event","dispatch","fn_创建命令书_update_WordCurrentFind","target","value","fn_发送命令书_搜索单词","wordToFind","fn_创建命令书_findSingleWord","fn_发送命令书_更新indexStart","fn_创建命令书_update_indexStart","fn_发送命令书_更新indexEnd","fn_创建命令书_update_indexEnd","fn_发送命令书_获取切片中的词头数组","fn_创建命令书_update_arrWordNameInSlice","fn_发送命令书_获取下20个单词","fn_创建命令书_获取下20个单词","fn_发送命令书_更新arrSelectedContent","fn_创建命令书_udpate_arrSelectedContent","innerText","fn_处理所有释例到一维数组","arr所有释例","newArr","forEach","item单个释例","index","arr","push","arr单个释例的释义与例句","split","item"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,YAArB;AACA,OAAO,KAAKC,mBAAZ,MAAqC,qBAArC;AAGA,OAAO,IAAIC,6BAA6B,GAAG,SAAhCA,6BAAgC,CAACC,KAAD,EAAW;AAClDH,EAAAA,QAAQ,CAACI,QAAT,CAAkBH,mBAAmB,CAACI,+BAApB,CAAoDF,KAAK,CAACG,MAAN,CAAaC,KAAjE,CAAlB;AACH,CAFM;AAIP,OAAO,IAAIC,aAAa,GAAG,SAAhBA,aAAgB,CAACC,UAAD,EAAgB;AAAE;AACzCT,EAAAA,QAAQ,CAACI,QAAT,CAAkBH,mBAAmB,CAACS,uBAApB,CAA4CD,UAA5C,CAAlB;AACH,CAFM;AAIP,OAAO,IAAIE,qBAAqB,GAAG,SAAxBA,qBAAwB,CAACR,KAAD,EAAW;AAC1CH,EAAAA,QAAQ,CAACI,QAAT,CAAkBH,mBAAmB,CAACW,0BAApB,CAA+CT,KAAK,CAACG,MAAN,CAAaC,KAA5D,CAAlB;AACH,CAFM;AAIP,OAAO,IAAIM,mBAAmB,GAAG,SAAtBA,mBAAsB,CAACV,KAAD,EAAW;AACxCH,EAAAA,QAAQ,CAACI,QAAT,CAAkBH,mBAAmB,CAACa,wBAApB,CAA6CX,KAAK,CAACG,MAAN,CAAaC,KAA1D,CAAlB;AACH,CAFM;AAIP,OAAO,IAAIQ,mBAAmB,GAAG,SAAtBA,mBAAsB,GAAM;AACnCf,EAAAA,QAAQ,CAACI,QAAT,CAAkBH,mBAAmB,CAACe,kCAApB,EAAlB;AACH,CAFM;AAIP,OAAO,IAAIC,iBAAiB,GAAG,SAApBA,iBAAoB,GAAM;AACjCjB,EAAAA,QAAQ,CAACI,QAAT,CAAkBH,mBAAmB,CAACiB,iBAApB,EAAlB;AACH,CAFM;AAIP,OAAO,IAAIC,6BAA6B,GAAG,SAAhCA,6BAAgC,GAAM;AAC7CnB,EAAAA,QAAQ,CAACI,QAAT,CAAkBH,mBAAmB,CAACmB,kCAApB,CAAuDjB,KAAK,CAACG,MAAN,CAAae,SAApE,CAAlB;AACH,CAFM,C,CAKP;;AAEA,OAAO,IAAIC,cAAc,GAAG,SAAjBA,cAAiB,CAACC,OAAD,EAAa;AACrC,MAAIC,MAAM,GAAG,EAAb,CADqC,CACrB;;AAEhBD,EAAAA,OAAO,CAACE,OAAR,CAAgB,UAACC,QAAD,EAAWC,KAAX,EAAkBC,GAAlB,EAA0B;AACtCJ,IAAAA,MAAM,CAACK,IAAP,CAAYF,KAAK,GAAG,CAApB,EADsC,CACf;;AAEvB,QAAIG,aAAa,GAAGJ,QAAQ,CAACK,KAAT,CAAe,GAAf,CAApB,CAHsC,CAGE;;AACxCD,IAAAA,aAAa,CAACL,OAAd,CAAsB,UAACO,IAAD,EAAOL,KAAP,EAAcC,GAAd,EAAsB;AACxCJ,MAAAA,MAAM,CAACK,IAAP,CAAYG,IAAZ;AACH,KAFD;AAGAR,IAAAA,MAAM,CAACK,IAAP,CAAY,UAAZ;AACH,GARD;AAUA,SAAOL,MAAP;AACH,CAdM","sourcesContent":["import objStore from \"./objStore\";\r\nimport * as moduleActionFactory from \"./fnCreateObjAction\";\r\n\r\n\r\nexport let fn_发送命令书_双向绑定word_currentFind = (event) => {\r\n    objStore.dispatch(moduleActionFactory.fn_创建命令书_update_WordCurrentFind(event.target.value))\r\n}\r\n\r\nexport let fn_发送命令书_搜索单词 = (wordToFind) => { //搜索单个单词的柯林斯信息\r\n    objStore.dispatch(moduleActionFactory.fn_创建命令书_findSingleWord(wordToFind))\r\n}\r\n\r\nexport let fn_发送命令书_更新indexStart = (event) => {\r\n    objStore.dispatch(moduleActionFactory.fn_创建命令书_update_indexStart(event.target.value))\r\n}\r\n\r\nexport let fn_发送命令书_更新indexEnd = (event) => {\r\n    objStore.dispatch(moduleActionFactory.fn_创建命令书_update_indexEnd(event.target.value))\r\n}\r\n\r\nexport let fn_发送命令书_获取切片中的词头数组 = () => {\r\n    objStore.dispatch(moduleActionFactory.fn_创建命令书_update_arrWordNameInSlice())\r\n}\r\n\r\nexport let fn_发送命令书_获取下20个单词 = () => {\r\n    objStore.dispatch(moduleActionFactory.fn_创建命令书_获取下20个单词())\r\n}\r\n\r\nexport let fn_发送命令书_更新arrSelectedContent = () => {\r\n    objStore.dispatch(moduleActionFactory.fn_创建命令书_udpate_arrSelectedContent(event.target.innerText))\r\n}\r\n\r\n\r\n//----------------------------------------\r\n\r\nexport let fn_处理所有释例到一维数组 = (arr所有释例) => {\r\n    let newArr = [] //存放\"arr所有释例\"在经过处理后的扁平化一维数组\r\n\r\n    arr所有释例.forEach((item单个释例, index, arr) => {\r\n        newArr.push(index + 1) //把编号也作为数组的一个item添加进去, 方便我们查看该单词到底有多少条释义.\r\n\r\n        let arr单个释例的释义与例句 = item单个释例.split('|') //str.split([separator[, limit]])方法, 使用指定的分隔符字符串将一个String对象分割成字符串数组. 返回一个字符串数组,不包括 separator 自身。\r\n        arr单个释例的释义与例句.forEach((item, index, arr) => {\r\n            newArr.push(item)\r\n        })\r\n        newArr.push('--------')\r\n    })\r\n\r\n    return newArr\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module"}